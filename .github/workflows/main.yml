name: GitHub Actions
run-name: ${{ github.actor }} of 4 is doing Capstone Project CICD for serverless application

on:
  push:
    branches: [ main, "*" ]

jobs:
    determine_branch:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set Branch Name as Environment Variable
        id: set_branch_name
        run: echo "BRANCH_NAME=${{ github.ref }}" >> $GITHUB_ENV
      - name: Determine Service Name
        id: determine_service_name
        run:
          # Extract the branch name from BRANCH_NAME
          branch_name=${BRANCH_NAME#refs/heads/}
          # Set the service name dynamically based on the branch name
          echo "SERVICE_NAME=group4-${branch_name}" >> $GITHUB_ENV
      - name: Deploy Serverless App
        run:
          # Now, you can use the SERVICE_NAME environment variable
          sls deploy --stage $SERVICE_NAME
  deploy-dev:
    if: github.ref == 'refs/heads/dev'
    name: deploy to dev
    runs-on: ubuntu-latest
    #needs: [package-scan, unit-testing]
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy --stage dev
      env:
        DEPLOY_ENV: 'dev'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  deploy-prod:
    if:  github.ref == 'refs/heads/prod'
    name: deploy to prod
    runs-on: ubuntu-latest
    #needs: [package-scan, unit-testing]
    strategy:
      matrix:
        node-version: [18.x]
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
    - run: npm ci
    - name: serverless deploy
      uses: serverless/github-action@v3.2
      with:
        args: deploy  --stage prod
      env:
        DEPLOY_ENV: 'prod'
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        
